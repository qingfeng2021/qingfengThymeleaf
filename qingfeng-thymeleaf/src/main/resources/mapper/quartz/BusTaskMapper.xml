<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingfeng.quartz.dao.BusTaskDao">

	<!--数据权限-->
	<sql id="authPageSql">
		<!-- 数据权限 -->
		<if test="(pd.auth_organize_ids == null or pd.auth_organize_ids.size == 0) and (pd.auth_user != null and pd.auth_user != '')">
			and a.create_user=#{pd.auth_user}
		</if>
		<if test="pd.auth_organize_ids != null and pd.auth_organize_ids.size > 0">
			and (a.create_user=#{pd.auth_user} or a.create_organize in
			<foreach collection="pd.auth_organize_ids" item="organize_id" open="(" separator="," close=")">
				#{organize_id}
			</foreach>
			)
		</if>
	</sql>
	<sql id="authPdSql">
		<!-- 数据权限 -->
		<if test="(auth_organize_ids == null or auth_organize_ids.size == 0) and (auth_user != null and auth_user != '')">
			and a.create_user=#{auth_user}
		</if>
		<if test="auth_organize_ids != null and auth_organize_ids.size > 0">
			and (a.create_user=#{auth_user} or a.create_organize in
			<foreach collection="auth_organize_ids" item="organize_id" open="(" separator="," close=")">
				#{organize_id}
			</foreach>
			)
		</if>
	</sql>

	<!--查询分页列表-->
	<select id="findListPage" parameterType="com.qingfeng.util.Page" resultType="com.qingfeng.util.PageData">
		select
			a.id as "id",
			a.type as "type",
			a.job_name as "job_name",
			a.job_group as "job_group",
			a.description as "description",
			a.notice_user as "notice_user",
			a.job_class_name as "job_class_name",
			a.cron_expression as "cron_expression",
			a.trigger_time as "trigger_time",
			a.trigger_state as "trigger_state",
			a.order_by as "order_by",
			a.remark as "remark",
			a.create_user as "create_user",
			a.create_time as "create_time",
			a.create_organize as "create_organize",
			a.update_user as "update_user",
			a.update_time as "update_time"
			from quartz_bustask a
			where 1=1
			<if test="pd.job_name != null and pd.job_name != ''">
				and a.job_name like concat('%',concat(#{pd.job_name},'%'))
			</if>
			<if test="pd.job_group != null and pd.job_group != ''">
				and a.job_group like concat('%',concat(#{pd.job_group},'%'))
			</if>
			<!-- 数据权限 -->
			<include refid="authPageSql"></include>
			order by a.order_by+0 asc,a.create_time desc
	</select>

    <!--查询分页数量-->
    <select id="findListSize" parameterType="com.qingfeng.util.Page" resultType="Integer">
        select
        count(*)
        from quartz_bustask a
        where 1=1
		<if test="pd.job_name != null and pd.job_name != ''">
			and a.job_name like concat('%',concat(#{pd.job_name},'%'))
		</if>
		<if test="pd.job_group != null and pd.job_group != ''">
			and a.job_group like concat('%',concat(#{pd.job_group},'%'))
		</if>
		<!-- 数据权限 -->
		<include refid="authPageSql"></include>
    </select>

    <!--查询列表-->
    <select id="findList" parameterType="com.qingfeng.util.PageData" resultType="com.qingfeng.util.PageData">
        select
			a.id as "id",
			a.type as "type",
			a.job_name as "job_name",
			a.job_group as "job_group",
			a.description as "description",
			a.notice_user as "notice_user",
			a.job_class_name as "job_class_name",
			a.cron_expression as "cron_expression",
			a.trigger_time as "trigger_time",
			a.trigger_state as "trigger_state",
			a.order_by as "order_by",
			a.remark as "remark",
			a.create_user as "create_user",
			a.create_time as "create_time",
			a.create_organize as "create_organize",
			a.update_user as "update_user",
			a.update_time as "update_time"
			from quartz_bustask a
			where 1=1
			<if test="job_name != null and job_name != ''">
				and a.job_name like concat('%',concat(#{job_name},'%'))
			</if>
			<if test="job_group != null and job_group != ''">
				and a.job_group like concat('%',concat(#{job_group},'%'))
			</if>
			<if test="ids != null and ids.size > 0">
				and a.id in
				<foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</if>
			<include refid="authPdSql"></include>
        	order by a.order_by+0 asc,a.create_time desc
    </select>
	
	<!--查询详情-->
	<select id="findInfo" parameterType="com.qingfeng.util.PageData" resultType="com.qingfeng.util.PageData">
		select
			a.id as "id",
			a.type as "type",
			a.job_name as "job_name",
			a.job_group as "job_group",
			a.description as "description",
			a.notice_user as "notice_user",
			a.job_class_name as "job_class_name",
			a.cron_expression as "cron_expression",
			a.trigger_time as "trigger_time",
			a.trigger_state as "trigger_state",
			a.order_by as "order_by",
			a.remark as "remark",
			a.create_user as "create_user",
			a.create_time as "create_time",
			a.create_organize as "create_organize",
			a.update_user as "update_user",
			a.update_time as "update_time"
			from quartz_bustask a
			where a.id=#{id}
	</select>


	<select id="findInfoForNameAndGroup" parameterType="com.qingfeng.util.PageData" resultType="com.qingfeng.util.PageData">
		select
			a.id as "id",
			a.type as "type",
			a.job_name as "job_name",
			a.job_group as "job_group",
			a.description as "description",
			a.notice_user as "notice_user",
			a.job_class_name as "job_class_name",
			a.cron_expression as "cron_expression",
			a.trigger_time as "trigger_time",
			a.trigger_state as "trigger_state",
			a.order_by as "order_by",
			a.remark as "remark",
			a.create_user as "create_user",
			a.create_time as "create_time",
			a.create_organize as "create_organize",
			a.update_user as "update_user",
			a.update_time as "update_time"
			from quartz_bustask a
			where a.job_name=#{job_name} and a.job_group=#{job_group} and a.id!=#{id}
	</select>
	
	<!--保存-->
	<insert id="save" parameterType="com.qingfeng.util.PageData">
		insert into quartz_bustask (id,type,job_name,job_group,description,notice_user,job_class_name,cron_expression,trigger_time,trigger_state,order_by,remark,create_user,create_time,create_organize,update_user,update_time)
			values
			(#{id,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR},#{job_name,jdbcType=VARCHAR},#{job_group,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{notice_user,jdbcType=VARCHAR},#{job_class_name,jdbcType=VARCHAR},#{cron_expression,jdbcType=VARCHAR},#{trigger_time,jdbcType=VARCHAR},#{trigger_state,jdbcType=VARCHAR},#{order_by,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},#{create_user,jdbcType=VARCHAR},#{create_time,jdbcType=VARCHAR},#{create_organize,jdbcType=VARCHAR},#{update_user,jdbcType=VARCHAR},#{update_time,jdbcType=VARCHAR})
	</insert>
	
	<!--更新-->
	<update id="update" parameterType="com.qingfeng.util.PageData">
		update quartz_bustask set
			<if test="type != null">type=#{type},</if>
			<if test="job_name != null">job_name=#{job_name},</if>
			<if test="job_group != null">job_group=#{job_group},</if>
			<if test="description != null">description=#{description},</if>
			<if test="notice_user != null">notice_user=#{notice_user},</if>
			<if test="job_class_name != null">job_class_name=#{job_class_name},</if>
			<if test="cron_expression != null">cron_expression=#{cron_expression},</if>
			<if test="trigger_time != null">trigger_time=#{trigger_time},</if>
			<if test="trigger_state != null">trigger_state=#{trigger_state},</if>
			<if test="order_by != null">order_by=#{order_by},</if>
			<if test="remark != null">remark=#{remark},</if>
			<if test="update_user != null">update_user=#{update_user},</if>
			update_time=#{update_time}
			where id=#{id}
	</update>
	
    <!--删除-->
    <delete id="del" parameterType="String">
        delete from quartz_bustask where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
        </foreach>
    </delete>


</mapper>